name: Auto Release

on:
  push:
    tags:
      - 'v*' # v로 시작하는 모든 태그에 대해 실행 (예: v1.0.0, v2.1.3)

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 전체 히스토리를 가져와서 커밋 메시지 분석

      - name: Get tag name
        id: tag
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Get previous tag
        id: prev_tag
        run: |
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          echo "prev_tag=$PREV_TAG" >> $GITHUB_OUTPUT

      - name: Generate release notes
        id: release_notes
        run: |
          TAG_NAME="${{ steps.tag.outputs.tag }}"
          PREV_TAG="${{ steps.prev_tag.outputs.prev_tag }}"

          # 이전 태그가 있으면 그 사이의 커밋들을 분석
          if [ -n "$PREV_TAG" ]; then
            echo "#### 📝 변경 사항 ($PREV_TAG → $TAG_NAME)" >> release_notes.md
            echo "" >> release_notes.md
            
            # 커밋 메시지를 분석하여 릴리즈 노트 생성
            git log $PREV_TAG..HEAD --pretty=format:"- %s" --no-merges | while read line; do
              # 커밋 메시지에 따라 이모지 추가
              echo "$line" >> release_notes.md
            done
          else
            echo "#### 🎯 초기 릴리즈" >> release_notes.md
            echo "" >> release_notes.md
            echo "- 🤖 AI 기반 코딩 아이디어 생성" >> release_notes.md
            echo "- 🎯 다양한 난이도 및 분야 선택" >> release_notes.md
            echo "- ⏱️ 제한시간 옵션 제공" >> release_notes.md
            echo "- 🔄 다중 AI 모델 fallback 지원" >> release_notes.md
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: VibeVistaBot ${{ steps.tag.outputs.tag }}
          body_path: release_notes.md
          draft: false
          prerelease: false
          generate_release_notes: false # 우리가 직접 작성한 노트 사용
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify success
        run: |
          echo "🎉 Release ${{ steps.tag.outputs.tag }} created successfully!"
          echo "📝 Release notes generated and published"
          echo "🔗 Check it out at: https://github.com/${{ github.repository }}/releases/tag/${{ steps.tag.outputs.tag }}"
